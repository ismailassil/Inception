version: "3.8"

## The Ports should only be exposed to other containers in the same network not the host

services:
  mariadb:
    build:
      context: ./requirements/mariadb/
      dockerfile: Dockerfile
    image: mariadb:iassil
    container_name: mariadb
    restart: always
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - phantom_net
    healthcheck:
      test: ["CMD", "nc", "-zv", "mariadb", "3306"]
      start_period: 5s
      interval: 1s
      timeout: 5s
      retries: 10

  nginx:
    build:
      context: ./requirements/nginx/
      dockerfile: Dockerfile
    image: nginx:iassil
    container_name: nginx
    hostname: nginx
    restart: always
    depends_on:
    - wordpress
    ports:
      - "443:443"
    env_file:
      - .env
    volumes:
      - wordpress_db:/var/www/wordpress/
    networks:
      - phantom_net
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 5s

  wordpress:
    build:
      context: ./requirements/wordpress/
      dockerfile: Dockerfile
    image: wordpress:iassil
    container_name: wordpress
    hostname: wordpress
    restart: always
    env_file:
      - .env
    volumes:
      - wordpress_db:/var/www/wordpress/
    networks:
      - phantom_net
    depends_on:
      mariadb:
        condition: service_healthy

  adminer:
    build:
      context: ./requirements/bonus/adminer/
      dockerfile: Dockerfile
    image: adminer:iassil
    container_name: adminer
    hostname: adminer
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - phantom_net
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    build:
      context: ./requirements/bonus/redis
      dockerfile: Dockerfile
    image: redis:iassil
    container_name: redis
    hostname: redis
    restart: always
    # ports:
    #   - "6379:6379"
    env_file:
      - .env
    networks:
      - phantom_net
    volumes:
      - redis_db:/data
    privileged: true
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
      start_period: 5s
      interval: 1s
      timeout: 5s
      retries: 10

volumes:
  db_data:
    name: "database_vol"
    driver: local
    driver_opts:
      device: "/home/${USER}/data/mariadb"
      o: bind
      type: none

  wordpress_db:
    name: "wordpress_database"
    driver: local
    driver_opts:
      device: "/home/${USER}/data/wordpress_db"
      o: bind
      type: none

  redis_db:
    name: "redis_memory"
    driver: local
    driver_opts:
      device: "/home/${USER}/data/redis_memory"
      o: bind
      type: none

networks:
  phantom_net:
    name: "phantom_net"
    driver: bridge
