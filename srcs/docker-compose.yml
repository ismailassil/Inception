version: "3.8"

########################
####    SERVICES    ####
########################
services:
  mariadb:
    build:
      context: ./requirements/mariadb/
      dockerfile: Dockerfile
    image: mariadb:iassil
    container_name: mariadb
    restart: always
    env_file:
      - .env
    volumes:
      - data_vol:/var/lib/mysql
    networks:
      - phantom_net
    healthcheck:
      test: ["CMD", "nc", "-zv", "mariadb", "3306"]
      start_period: 5s
      interval: 1s
      timeout: 5s
      retries: 10

  nginx:
    build:
      context: ./requirements/nginx/
      dockerfile: Dockerfile
    image: nginx:iassil
    container_name: nginx
    hostname: nginx
    restart: always
    depends_on:
    - wordpress
    ports:
      - "443:443"
    env_file:
      - .env
    volumes:
      - wordpress_vol:/var/www/wordpress/
    networks:
      - phantom_net
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 5s

  wordpress:
    build:
      context: ./requirements/wordpress/
      dockerfile: Dockerfile
    image: wordpress:iassil
    container_name: wordpress
    hostname: wordpress
    restart: always
    env_file:
      - .env
    volumes:
      - wordpress_vol:/var/www/wordpress/
    networks:
      - phantom_net
    depends_on:
      mariadb:
        condition: service_healthy

  adminer:
    build:
      context: ./requirements/bonus/adminer/
      dockerfile: Dockerfile
    image: adminer:iassil
    container_name: adminer
    hostname: adminer
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - phantom_net
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    build:
      context: ./requirements/bonus/redis
      dockerfile: Dockerfile
    image: redis:iassil
    container_name: redis
    hostname: redis
    restart: always
    env_file:
      - .env
    networks:
      - phantom_net
    volumes:
      - redis_db:/data
    privileged: true
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
      start_period: 5s
      interval: 1s
      timeout: 5s
      retries: 10

  static_website:
    build:
      context: ./requirements/bonus/static_website
      dockerfile: Dockerfile
    image: static:iassil
    container_name: static_website
    hostname: static_website
    restart: always
    ports:
      - "3000:3000"
    networks:
      - phantom_net

  ftp_service:
    build:
      context: ./requirements/bonus/ftp
      dockerfile: Dockerfile
    image: ftp:iassil
    container_name: ftp
    hostname: ftp
    restart: always
    env_file:
      - .env
    ports:
      - "21:21"
      - "21100-21110:21100-21110"
    networks:
      - phantom_net
    volumes:
      - wordpress_vol:/data/wordpress_files/

  cadvisor:
    build:
      context: ./requirements/bonus/cAdvisor
      dockerfile: Dockerfile
    image: cadvisor:iassil
    container_name: cadvisor
    hostname: cadvisor
    restart: always
    ports:
      - "7000:7000"
    networks:
      - phantom_net
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro # For accessing docker sockets
      - /sys:/sys:ro
      - /var/snap/docker/common/var-lib-docker/:/var/lib/docker:ro # For Docker Data
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - "/dev/kmsg:/dev/kmsg" # read kernel messages for system-level monitoring

########################
####    VOLUMES     ####
########################
volumes:
  data_vol:
    name: "database_vol"
    driver: local
    driver_opts:
      device: "/home/${USER}/data/mariadb"
      o: bind
      type: none

  wordpress_vol:
    name: "wordpress_database_vol"
    driver: local
    driver_opts:
      device: "/home/${USER}/data/wordpress"
      o: bind
      type: none

  redis_db:
    name: "redis_memory_vol"
    driver: local
    driver_opts:
      device: "/home/${USER}/data/redis"
      o: bind
      type: none

########################
####    NETWORK     ####
########################
networks:
  phantom_net:
    name: "phantom_net"
    driver: bridge
